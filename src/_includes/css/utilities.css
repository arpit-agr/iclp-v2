.flow > * + * {
	margin-block-start: var(--flow-space, 1em);
}

.wrapper {
	max-inline-size: min(
		var(--max-page-width),
		calc(100vw - (2 * var(--page-gutter)))
	);
	margin-inline: auto;
}

:where(.stack) {
	display: flex;
	flex-direction: column;
	gap: var(--stack-gap, 1em);
	justify-content: var(--stack-vertical-alignment, flex-start);
	align-items: var(--stack-horizontal-alignment, flex-start);
}

:where(.cluster) {
	display: flex;
	flex-wrap: wrap;
	gap: var(--cluster-gap, 1em);
	justify-content: var(--cluster-horizontal-alignment, flex-start);
	align-items: var(--cluster-vertical-alignment, center);
}

.full-bleed {
	inline-size: 100vw;
	margin-inline-start: calc(50% - 50vw);
}

.with-sidebar {
	display: flex;
	flex-wrap: wrap;
	gap: 0;
}

.with-sidebar > :last-child {
	flex-grow: 1;
}

.with-sidebar > :first-child {
	flex-basis: 0;
	flex-grow: 999;
	min-inline-size: 70%;
}

.switcher {
	display: flex;
	flex-wrap: wrap;
	gap: 0 1em;
}

/* Threshold is the container width at which
the component switches between a horizontal and vertical layout */
.switcher > * {
	flex-grow: 1;
	flex-basis: calc((var(--threshold) - 100%) * 999);
}

.switcher > :nth-last-child(n + 3),
.switcher > :nth-last-child(n + 3) ~ * {
	flex-basis: 100%;
}

.step-0 {
	font-size: var(--step-0);
}

.step--1 {
	font-size: var(--step--1);
	letter-spacing: 0.03em;
}

.vh {
	position: absolute;
	inline-size: 1px;
	block-size: auto;
	margin: 0;
	padding: 0;
	border: 0;
	clip: rect(0 0 0 0);
	overflow: hidden;
	white-space: nowrap;
}
