.post + aside {
	margin-block-start: var(--page-inner-gap);
}

.post article {
	--stack-gap: var(--page-inner-gap);
}

:where(.post) a {
	display: inline;
}

.post .meta-info {
	font-style: italic;
}

.editors-note-container {
	--editors-note-font-size: var(--step-0);
	position: relative;
	inline-size: 100%;
}

.editors-note-container[open] {
	padding-block-start: calc(var(--editors-note-font-size) * 0.5 * var(--lh-3));
}

.editors-note-container summary {
	color: var(--primary-text);
	font-size: var(--editors-note-font-size);
	/* font-weight: var(--bold); */
	cursor: pointer;
}

.editors-note-container:not([open]) summary {
	padding-block: calc(0.5 * var(--page-gutter));
	border-block: var(--underline-thickness) solid var(--link-underline);
}

.editors-note-container[open] summary {
	position: absolute;
	inset-block-end: calc(100% - (1em * (0.5 * var(--lh-3))));
	padding-inline: 1ch;
	border-radius: var(--border-radius);
	background: var(--primary-text);
	color: var(--primary-bg);
	translate: 0 50%;
}

.editors-note-container[open] summary::-webkit-details-marker,
.editors-note-container[open] summary::marker {
	content: "";
	display: none;
}

.editors-note {
	padding-block: var(--space-m);
	border-block: var(--underline-thickness) solid var(--link-underline);
}

.tag-list {
	max-inline-size: 60ch;
	margin-inline-start: auto;
	text-align: end;
}

.tag-list > span {
	display: inline-flex;
	gap: 0;
	flex-wrap: nowrap;
	align-items: flex-end;
	text-align: end;
}

:where(.prose) :is(h2, h3) {
	max-inline-size: 50ch;
}

@supports (text-wrap: balance) {
	:where(.post article) :is(h1, h2, h3) {
		max-inline-size: unset;
		text-wrap: balance;
	}

	.tag-list {
		text-wrap: balance;
	}
}

:where(.post article) :is(h1, h2, h3, blockquote, blockquote + *) {
	--flow-space: 1.5em;
}

@supports (initial-letter: 1 1) or (-webkit-initial-letter: 1 1) {
	.prose::first-letter {
		-webkit-initial-letter: 2 2;
		initial-letter: 2 2;
		margin-inline-end: 0.5ch;

		color: var(--primary-text);
		font-weight: var(--bold);
	}
}

:where(.prose) blockquote {
	padding-inline-start: 1em;
	border-inline-start: var(--underline-thickness) solid var(--border-color);
	font-style: italic;
}

:where(.prose) :is(ul, ol) > li + li {
	margin-block-start: var(--space-2xs);
}
